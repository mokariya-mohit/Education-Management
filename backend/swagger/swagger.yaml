openapi: 3.0.0
info:
  title: Education Management System API
  description: API documentation for the Education Management System.
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Development server

paths:
  /api/auth/register:
    post:
      summary: Register a new user
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
                - role
              properties:
                username:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: john@example.com
                password:
                  type: string
                  example: password123
                role:
                  type: string
                  example: student
      responses:
        "200":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  role:
                    type: string
                  token:
                    type: string

  /api/auth/login:
    post:
      summary: Login a user
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: john@example.com
                password:
                  type: string
                  example: password123
      responses:
        "200":
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  role:
                    type: string
                  token:
                    type: string

  /api/courses:
    get:
      summary: Get all courses
      tags:
        - Course
      responses:
        "200":
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    title:
                      type: string
                    description:
                      type: string
                    startDate:
                      type: string
                      format: date
                    endDate:
                      type: string
                      format: date
                    teacher:
                      type: string
                    students:
                      type: array
                      items:
                        type: string

    post:
      summary: Create a new course
      tags:
        - Course
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - description
                - startDate
                - endDate
                - teacher
              properties:
                title:
                  type: string
                description:
                  type: string
                startDate:
                  type: string
                  format: date
                endDate:
                  type: string
                  format: date
                teacher:
                  type: string
      responses:
        "201":
          description: Course created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  startDate:
                    type: string
                    format: date
                  endDate:
                    type: string
                    format: date
                  teacher:
                    type: string

  /api/courses/{courseId}:
    get:
      summary: Get course details
      tags:
        - Course
      parameters:
        - name: courseId
          in: path
          required: true
          description: ID of the course
          schema:
            type: string
      responses:
        "200":
          description: Course details
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  startDate:
                    type: string
                    format: date
                  endDate:
                    type: string
                    format: date
                  teacher:
                    type: string
                  students:
                    type: array
                    items:
                      type: string
        "404":
          description: Course not found

  /api/enrollment/{courseId}:
    post:
      summary: Enroll a student in a course
      tags:
        - Enrollment
      parameters:
        - name: courseId
          in: path
          required: true
          description: ID of the course
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - studentId
              properties:
                studentId:
                  type: string
      responses:
        "200":
          description: Student enrolled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Course or student not found

  /api/grades/{courseId}:
    post:
      summary: Assign a grade to a student
      tags:
        - Grade
      parameters:
        - name: courseId
          in: path
          required: true
          description: ID of the course
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - studentId
                - grade
              properties:
                studentId:
                  type: string
                grade:
                  type: string
                  example: A
      responses:
        "200":
          description: Grade assigned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Course or student not found

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        email:
          type: string
        role:
          type: string
        token:
          type: string

    Course:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        teacher:
          type: string
        students:
          type: array
          items:
            type: string

    Grade:
      type: object
      properties:
        studentId:
          type: string
        grade:
          type: string
